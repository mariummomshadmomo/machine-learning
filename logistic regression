import numpy as np
import pandas as pd
import matplotlib.pyplot as mtp
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn import metrics

data_set=pd.read_csv("Social_Network_Ads.csv")
x=data_set.iloc[:,2:-1]
y=data_set.iloc[:,-1]

x_train, x_test, y_train, y_test=train_test_split(x,y, test_size=0.3, random_state=0)

st_x=StandardScaler()
x_train=st_x.fit_transform(x_train)
x_test=st_x.fit_transform(x_test)

classifier= LogisticRegression(random_state=0)
classifier.fit(x_train, y_train)

y_pred=classifier.predict(x_test)

print("Confusion Matrix: \n", metrics.confusion_matrix(y_test, y_pred))
print("Accuracy: ", metrics.accuracy_score(y_test, y_pred))
print(metrics.classification_report(y_test, y_pred))


y_pred_proba=classifier.predict_proba(x_test)[:,1]
AUCLR=metrics.roc_auc_score(y_test, y_pred_proba)
print("AUC Score: ", AUCLR)
fprLR, tprLR, thresholdvalues= metrics.roc_curve(y_test, y_pred_proba)
mtp.plot([0,1], [0,1], color='red', linestyle='--')
mtp.plot(fprLR, tprLR, label="Logistic Regression (area= " +str(AUCLR)+")")
mtp.xlabel("False Positive Rate")
mtp.ylabel("True Positive Rate")
mtp.legend(loc="Lower right")
mtp.show()

